module.exports = {
  env: {
    node: true,
    es6: true,
  },
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint', 'prettier'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:prettier/recommended',
  ],
  rules: {
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/semi': [2, 'never'],
    quotes: 'off',
    '@typescript-eslint/quotes': ['error', 'single'],
    'space-before-function-paren': 'off',
    'no-irregular-whitespace': ['error'],
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'one-var': ['error', 'never'],
    'no-cond-assign': ['error', 'except-parens'],
    eqeqeq: ['error', 'always'],
    'eol-last': ['error', 'always'],
    'new-parens': ['error', 'always'],
    'no-caller': ['error'],
    'no-constant-condition': ['error'],
    'no-control-regex': ['error'],
    'no-debugger': ['error'],
    'no-duplicate-case': ['error'],
    'no-eval': ['error'],
    'no-ex-assign': ['error'],
    'no-extra-boolean-cast': ['error'],
    'no-fallthrough': ['error'],
    'no-inner-declarations': ['error'],
    'no-invalid-regexp': ['error', { allowConstructorFlags: ['u', 'y'] }],
    'no-proto': ['error'],
    'no-shadow': ['off'],
    '@typescript-eslint/no-shadow': 'error',
    'no-regex-spaces': ['error'],
    'no-self-compare': ['error'],
    'no-sparse-arrays': ['error'],
    'no-mixed-spaces-and-tabs': ['error'],
    'no-unsafe-negation': ['error'],
    'no-new-wrappers': ['error'],
    'no-self-assign': ['error'],
    'no-this-before-super': ['error'],
    'no-with': ['error'],
    'rest-spread-spacing': ['error', 'never'],
    'no-trailing-spaces': ['error', { ignoreComments: true }],
    'no-undef-init': ['error'],
    'no-unsafe-finally': ['error'],
    'padded-blocks': ['error', 'never'],
    'space-in-parens': ['error', 'never'],
    'use-isnan': ['error'],
    'valid-typeof': ['error', { requireStringLiterals: true }],
    'brace-style': ['error', '1tbs'],
    curly: ['error', 'all'],
    '@typescript-eslint/naming-convention': [
      'error',
      {
        selector: 'variable',
        format: ['camelCase', 'UPPER_CASE'],
      },
      {
        selector: 'typeLike',
        format: ['PascalCase'],
      },
      {
        selector: 'class',
        format: ['PascalCase'],
      },
      {
        selector: 'interface',
        format: ['PascalCase'],
        custom: {
          regex: '^I[A-Z][a-zA-Z]+$',
          match: true,
        },
      },
    ],
    'handle-callback-err': ['error', '^(err|error)$'],
    'no-array-constructor': ['error'],
    'no-unreachable': ['error'],
    'no-multi-spaces': ['error'],
    'no-async-promise-executor': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-console': 'error',
  },
}
